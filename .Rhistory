blogdown::serve_site()
blogdown:::serve_site()
blogdown::install_hugo(force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
data.frame(party = 'Democrats',
political_score = rnorm(n = n_subjects, mean = -1 * political_m))
set.seed(201908)  # For replicability
n_subjects  <- 1000
political_m <- .25
data.frame(party = 'Democrats',
political_score = rnorm(n = n_subjects, mean = -1 * political_m))
data.frame(party = 'Democrats',
political_score = rnorm(n = n_subjects, mean = -1 * political_m))
n_per_party <- 1000
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnrom(n = n_per_party, mean = 0))
)
suppressWarnings(library(tidyverse))
suppressMessages(library(tidyverse))
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnrom(n = n_per_party, mean = 0))
)
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnorm(n = n_per_party, mean = 0))
)
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnorm(n = n_per_party, mean = 0))
) %>% suppressWarnings()
individuals
summary(individuals)
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnorm(n = n_per_party, mean = 0))
) %>%
mutate(party = factor(party, levels = c('Democrats', 'Independents', 'Republicans')))
theme_set(theme_minimal())
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70')
political_m <- .75
## Build some simulated data
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnorm(n = n_per_party, mean = 0))
) %>%
mutate(party = factor(party, levels = c('Democrats', 'Independents', 'Republicans')))
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'black', alpha = 1/5)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray30', alpha = 1/5)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(fill = 'All')
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(group = 'All')
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(aes(group = 'All'))
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(aes(group = 'Overall'))
set.seed(2019)  # For replicability
n_per_party <- 1000
political_m <- .75
## Build some simulated data
individuals <- bind_rows(
# Democrats
data.frame(party = 'Democrats',
political_score = rnorm(n = n_per_party, mean = -1 * political_m)),
# Republicans
data.frame(party = 'Republicans',
political_score = rnorm(n = n_per_party, mean = +1 * political_m)),
# Independents
data.frame(party = 'Independents',
political_score = rnorm(n = n_per_party, mean = 0))
) %>%
mutate(party = factor(party, levels = c('Democrats', 'Independents', 'Republicans')))
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(aes(group = 'Overall'))
pol_cols <- c('blue', 'tan', 'beige')
pol_cols <- c('blue', 'tan', 'red')
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray70', alpha = 1/5) +
geom_density(aes(group = 'Overall')) +
scale_fill_manual(values = pol_cols)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray50', alpha = 1/5) +
geom_density(aes(group = 'Overall')) +
scale_fill_manual(values = pol_cols)
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70')
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5)
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray50', alpha = 1/5) +
scale_fill_manual(values = pol_cols)
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c('0, .50'))
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c(0, .50))
scale_y_continuous(limits = c(0, .50))
ggplot(individuals, aes(x = political_score, fill = party)) +
geom_density(colour = 'gray50', alpha = 1/5) +
scale_fill_manual(values = pol_cols) +
scale_y_continuous(limits = c(0, .50))
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c(0, .50)) +
theme_void()
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c(0, .50)) +
theme_void() +
labs(x = 'Political Ideology')
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c(0, .50)) +
theme_void() +
labs(x = 'Political Ideology')
ggplot(individuals, aes(x = political_score)) +
geom_density(colour = 'gray50', fill = 'gray70', alpha = 1/5) +
scale_y_continuous(limits = c(0, .50)) +
labs(x = 'Political Ideology')
blogdown:::new_post_addin()
blogdown:::new_post_addin()
emo::ji('netlify')
install.packages('emo')
remotes::install_github('hadley/emo')
